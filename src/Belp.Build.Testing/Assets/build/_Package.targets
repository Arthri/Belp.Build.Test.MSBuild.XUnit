<Project ToolsVersion="15.0" InitialTargets="_CheckBelpTestingConfiguration" TreatAsLocalProperty="_TestPackagesDirectory" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <_TestPackagesDirectory>$(TargetDir)packages</_TestPackagesDirectory>
  </PropertyGroup>

  <Target Name="_CheckBelpTestingConfiguration">
    <Error Code="BLP4010" Text="%24(_TestPackagesDirectory) is empty." Condition="'$(_TestPackagesDirectory)' == ''" />
  </Target>

  <Target Name="_CollectTestProjectReferenceOutput" Condition="'@(TestProjectReference)' != ''">
    <MSBuild BuildInParallel="true" Projects="@(TestProjectReference)" Targets="_GetOutputItemsFromPack" RemoveProperties="Configuration">
      <Output TaskParameter="TargetOutputs" ItemName="_TestProjectReferenceOutput" />
    </MSBuild>
  </Target>

  <Target Name="_CopyTestProjectReferences" BeforeTargets="Build" DependsOnTargets="_CollectTestProjectReferenceOutput" Condition="'@(TestProjectReference)' != ''">
    <RemoveDir Directories="$(_TestPackagesDirectory)" />
    <MakeDir Directories="$(_TestPackagesDirectory)" />
    <Copy SourceFiles="@(_TestProjectReferenceOutput->WithMetadataValue('Extension', '.nupkg'))" DestinationFolder="$(_TestPackagesDirectory)" />
  </Target>

  <PropertyGroup>
    <CollectUpToDateCheckInputDesignTimeDependsOn>_Belp_CollectFUTDCInputs</CollectUpToDateCheckInputDesignTimeDependsOn>
  </PropertyGroup>

  <Target Name="_Belp_CollectFUTDCInputs" DependsOnTargets="_CollectTestProjectReferenceOutput" Condition="'@(TestProjectReference)' != ''">
    <ItemGroup>
      <UpToDateCheckInput Include="@(_TestProjectReferenceOutput)" />
    </ItemGroup>
  </Target>



  <!-- Generate Global Test Packages References -->
  <PropertyGroup>
    <GlobalTestPackageReferencesPath Condition="'$(GlobalTestPackageReferencesPath)' == ''">$(IntermediateOutputPath)$(MSBuildProjectName).GlobalTestPackageReferences.g.cs</GlobalTestPackageReferencesPath>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(GlobalTestPackageReferencesPath)" />
  </ItemGroup>

  <Target Name="_GlobalTestPackageReferences" BeforeTargets="BeforeCompile;CoreCompile" AfterTargets="PrepareForBuild" Condition="'@(TestProjectReference->HasMetadata('Alias'))' != ''">
    <PropertyGroup>
      <_GlobalTestPackageReferences>
<![CDATA[// <auto-generated />
#pragma warning disable
#nullable disable
global using static _GlobalTestPackageReferences%3B
using Belp.Build.Testing.Resources%3B

internal static class _GlobalTestPackageReferences
{
@(TestProjectReference->HasMetadata('Alias')->'    public static TestPackage %(Alias) { get%3B } = TestPackagesManager.Packages["%(Filename)"]%3B', '%0A%0A')
}
]]>
      </_GlobalTestPackageReferences>
    </PropertyGroup>

    <WriteLinesToFile File="$(GlobalTestPackageReferencesPath)" Lines="$(_GlobalTestPackageReferences)" Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>



  <!-- Configure Samples -->
  <ItemGroup>
    <None Include="samples/**/*.*proj" Visible="true" />
  </ItemGroup>

  <Target Name="WriteSamplesPath" AfterTargets="Build">
    <WriteLinesToFile File="$(TargetDir)samples_path.txt" Lines="$([System.IO.Path]::GetFullPath('$(MSBuildProjectDirectory)/samples'))" Overwrite="true" />
  </Target>



  <PropertyGroup>
    <DefineConstants Condition="'$(BelpBuildTestingUseMSBuildModuleInitializer)' != 'false'">$(DefineConstants);BELP_BUILD_TESTING_MODULE_INITIALIZER</DefineConstants>
  </PropertyGroup>

</Project>
