<Project ToolsVersion="15.0" TreatAsLocalProperty="_TestPackagesDirectory" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <_TestPackagesDirectory>$(TargetDir)packages</_TestPackagesDirectory>
  </PropertyGroup>

  <Target Name="PackProjectsUnderTest" AfterTargets="Build" Condition="'@(BuildProjectUnderTest)' != ''">
    <MSBuild BuildInParallel="true" Projects="@(BuildProjectUnderTest)" Targets="Pack;_GetOutputItemsFromPack">
      <Output TaskParameter="TargetOutputs" ItemName="_BuildProjectPackOutputs" />
    </MSBuild>

    <ItemGroup>
      <_BuildProjectPackages Include="@(_BuildProjectPackOutputs)" Condition="'%(Extension)' == '.nupkg'" />
    </ItemGroup>

    <Error Code="BLP4010" Text="%24(_TestPackagesDirectory) is empty." Condition="'$(_TestPackagesDirectory)' == ''" />
    <RemoveDir Directories="$(_TestPackagesDirectory)" />
    <MakeDir Directories="$(_TestPackagesDirectory)" />
    <Copy SourceFiles="@(_BuildProjectPackages)" DestinationFolder="$(_TestPackagesDirectory)" />
  </Target>



  <!-- Generate Global Test Packages References -->
  <PropertyGroup>
    <GlobalTestPackageReferencesPath Condition="'$(GlobalTestPackageReferencesPath)' == ''">$(IntermediateOutputPath)$(MSBuildProjectName).GlobalTestPackageReferences.g.cs</GlobalTestPackageReferencesPath>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(GlobalTestPackageReferencesPath)" />
  </ItemGroup>

  <Target Name="_GlobalTestPackageReferences" BeforeTargets="BeforeCompile;CoreCompile" AfterTargets="PrepareForBuild" Condition="'@(BuildProjectUnderTest->HasMetadata('Alias'))' != ''">
    <PropertyGroup>
      <_GlobalTestPackageReferences>
<![CDATA[// <auto-generated />
#pragma warning disable
#nullable disable
global using static _GlobalTestPackageReferences%3B
using Belp.Build.Test.MSBuild.Resources%3B

internal static class _GlobalTestPackageReferences
{
@(BuildProjectUnderTest->HasMetadata('Alias')->'    public static TestPackage %(Alias) { get%3B } = TestPackagesManager.Packages["%(Filename)"]%3B', '%0A%0A')
}
]]>
      </_GlobalTestPackageReferences>
    </PropertyGroup>

    <WriteLinesToFile File="$(GlobalTestPackageReferencesPath)" Lines="$(_GlobalTestPackageReferences)" Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>



  <!-- Configure Samples -->
  <ItemGroup>
    <None Include="samples/**/*.*proj" />
  </ItemGroup>

  <Target Name="WriteSamplesPath" AfterTargets="Build">
    <WriteLinesToFile File="$(TargetDir)samples_path.txt" Lines="$([System.IO.Path]::GetFullPath('$(MSBuildProjectDirectory)/samples'))" Overwrite="true" />
  </Target>



  <PropertyGroup>
    <DefineConstants Condition="'$(BelpTestUseMSBuildModuleInitializer)' != 'false'">$(DefineConstants);BELP_BUILD_TEST_MSBUILD_MODULE_INITIALIZER</DefineConstants>
  </PropertyGroup>

</Project>
